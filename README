=================================== G A M E ===================================
Bubble Trouble

================================== N A M E S ==================================
Miriam Manolache	- 314101304
Netanel Bondar		- 207211848
Tomer Akrish		- 315224295

============================= G A M E - R U L E S =============================
In Bubble Trouble your goal is to pop all the balls in each level without getting
hit by the balls. In our version we actualized the normal game + survival mode.
Normal: you can either play SOLO or DUO (same pc or online), play along the levels
	and win, when you pop a ball you got a chance of getting a gift, each time you 
	get hit by ball the level will reset and you'll lose 1 life, when the lives
	end the game will be over.

Survival: 1 endless level without any walls (so you can go in either direction 
	for ever) and the balls spawn on you infinitely the game is over when you lose
	all the lives. In this mode you can only play SOLO

Level Creator: you can create your own levels and play them, just click save and
	reload the game and the level will be waiting for you (last one).
	you can choose which balls to put (8 - smallest, 0 - biggest) which direction
	they'll go, choose to add walls or floors.

================================ O B J E C T S ================================
Ball	- 
Bear	- 
Rope	- 
Tile	- 
Button	- 
Gift	-

======================= F I L E - D E S C R I P T I O N =======================
---------------------------------- .h files -----------------------------------
Animation.h - accountable for the animation properties in the game.

Ball.h - can create a ball with rigid body for the game or just the shape for level
	creator.

Bar.h - accountable for all the game info, for example: time, lives, score and more.

Bear.h - multiple access functions, inherit from movingObjects.

Board.h - world of the game, contains balls, base and added tiles and gifts.

Button.h - can rotate, change colors, return if pressed.

ContactListener.h - accountable for collision detection.

Controller.h - controls the game, whether will show the game the menu or level creator
	has window member.

GameObject.h - has virtual draw function and pointer to b2Body.

GameScreen.h - accountable for all the game activities: normal or survival game.

Gun.h - has rope member and knows how many can he fire, which abilities he has.

Input.h - virtual class for input in game, either from same Pc or from online.

LevelCreator.h - has members of ball and tile to place on the "board" to create a level.

Macros.h - Including all constants used across the program. For example: window and bear size, filter indexes etc.

MenuScreen.h - accountable for menu show: buttons, help etc.

MovingObject.h - a class for moving objects.

OnlineInput.h - reads input from online (lan) and send it to second player.

PcInput.h - reads input from keyboard.

Resources.h - singleton class thats hold all the resources for the entire game.

Rope.h - rope popper.

StaticObject.h - a class for static objects.

Tile.h - using it as a wall, floor, floating floor or any tile in the game.

Timer.h - time in class.

---------------------------------- .cpp files ---------------------------------
Animation.cpp - 

Ball.cpp - The balls the player needs to destroy. Handles all things related to the balls.
			For example: Destroy itself and spawn 2 smaller balls, movement etc.

Bar.cpp - 

Bear.cpp - Derived from the MovingObject class. Handles all things related to the bear object the player controls.
			For example: Handles different inputs based on the game mode, movement, animation, has a Gun member to 
							manage its ropes and so on.

Board.cpp - Manages all objects related to the game itself, has vectors of gifts, balls, tiles and the box2d world.
				Handles their drawings, builds the level and so on.

Button.cpp - 

ContactListener.cpp - Derived from the built in base class b2ContactListener. 
						Checks and handles collisions between certain objects in the game. 
						For example: rope with ball, ball with player and so on.

Controller.cpp - 

GameObject.cpp - Base class for objects in the game like Button, Moving and Static Objects etc.
					Handles the size, position and texture of the object. In addition has function to draws itself.

GameScreen.cpp - 

Gun.cpp - Manages a list of ropes for each bear. Handles their drawings, shot cool-down and their destruction.

LevelCreator.cpp - 

MenuScreen.cpp - 

MovingObject.cpp - 

OnlineInput.cpp - 

PcInput.cpp - 

Resources.cpp - A singleton which stores and handles all textures, levels, balls colors and so on for the other
					objects to use.

Rope.cpp - Handles the ropes shot by the guns. Handles its size, movement, destruction and box2d attributes.

Tile.cpp - 

Timer.cpp - 


============================= C O N T A I N E R S =============================


============================= A L G O R I T H M S =============================


============================== K N O W N - B U G ==============================


=============================== C O M M E N T S ===============================
